Title: Allocation Efficiency in High-Performance Go Services
URL: http://bit.ly/2p0pva7
Description: Automatic memory management is an improvement from
no management, but it still isn't perfect. What are some techniques
that can help compiler and garbage collection to manage allocation
more efficiently? Some of the techniques include don't do premature
optimizations, allocate on stack instead of heap, etc.

Title: A Million Dollar Engineering Problem
URL: http://bit.ly/2nsffpy
Description: AWS costs a lot as company grows. How can the company
detect the bottleneck of the issue, and how does it fix the problem?
Some interesting points were how DynamoDB charges money based on
partition counts, and how naive looking test cases caused a bottleneck :)

Title: Pixie: a system for recommending 3+ billion items to 200+ million users in real-time
URL: https://bit.ly/2KNIc6Z
Description: Pinterest recommendation system gives recommendation from 3 billion
items to 200+ million users in real time (low-latency, high throughput). It uses
random walk algorithm with some additional informations to create a better
user recommendation systems in few miliseconds. The random walk on bipartite
graph between pins and boards was pretty interesting to see.

